import 'lib/services/algolia_service.dart';

void main() async {
  print('üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è HTTP Algolia —Å–µ—Ä–≤—ñ—Å—É');
  
  final algoliaService = AlgoliaService();
  
  // –¢–µ—Å—Ç—É—î–º–æ –±–∞–∑–æ–≤–∏–π –ø–æ—à—É–∫
  print('\nüîç –¢–µ—Å—Ç—É—î–º–æ –±–∞–∑–æ–≤–∏–π –ø–æ—à—É–∫: "–∞–≤—Ç–æ"');
  try {
    final results = await algoliaService.searchProducts(
      query: '–∞–≤—Ç–æ',
      limit: 5,
    );
    
    print('üìä –ó–Ω–∞–π–¥–µ–Ω–æ: ${results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤');
    
    if (results.isNotEmpty) {
      print('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç–∏:');
      for (int i = 0; i < results.length && i < 3; i++) {
        final product = results[i];
        print('  ${i + 1}. ${product.title}');
        print('     –¶—ñ–Ω–∞: ${product.price} ${product.currency}');
        print('     –õ–æ–∫–∞—Ü—ñ—è: ${product.location}');
      }
    }
  } catch (e) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞: $e');
  }
  
  // –¢–µ—Å—Ç—É—î–º–æ –ø–æ—à—É–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó
  print('\nüîç –¢–µ—Å—Ç—É—î–º–æ –ø–æ—à—É–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó: "–ï–ª–µ–∫—Ç—Ä–æ–Ω—ñ–∫–∞"');
  try {
    final results = await algoliaService.searchProducts(
      query: '—Ç–µ–ª–µ—Ñ–æ–Ω',
      categoryId: 'electronics-category',
      limit: 5,
    );
    
    print('üìä –ó–Ω–∞–π–¥–µ–Ω–æ: ${results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤');
  } catch (e) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞: $e');
  }
  
  // –¢–µ—Å—Ç—É—î–º–æ –≥–µ–æ–ø–æ—à—É–∫
  print('\nüåç –¢–µ—Å—Ç—É—î–º–æ –≥–µ–æ–ø–æ—à—É–∫ (–ö–∏—ó–≤)');
  try {
    final results = await algoliaService.searchByLocation(
      latitude: 50.4501,
      longitude: 30.5234,
      radiusInKm: 20,
      limit: 5,
    );
    
    print('üìä –ó–Ω–∞–π–¥–µ–Ω–æ: ${results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –ø–æ–±–ª–∏–∑—É –ö–∏—î–≤–∞');
  } catch (e) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞: $e');
  }
  
  // –¢–µ—Å—Ç—É—î–º–æ —Ñ–∞—Å–µ—Ç–∏
  print('\nüè∑Ô∏è –¢–µ—Å—Ç—É—î–º–æ —Ñ–∞—Å–µ—Ç–∏');
  try {
    final facets = await algoliaService.getFacets();
    
    print('üìä –î–æ—Å—Ç—É–ø–Ω—ñ —Ñ–∞—Å–µ—Ç–∏:');
    for (final entry in facets.entries) {
      print('  ${entry.key}: ${entry.value}');
    }
  } catch (e) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞: $e');
  }
  
  print('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
} 