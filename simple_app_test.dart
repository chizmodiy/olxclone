import 'package:algoliasearch/algoliasearch.dart';

void main() async {
  print('üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Algolia –ø–æ—à—É–∫—É –≤ –¥–æ–¥–∞—Ç–∫—É');
  
  // –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç—ñ —Å–∞–º—ñ –∫–ª—é—á—ñ, —â–æ –≤ –¥–æ–¥–∞—Ç–∫—É
  const appId = 'XYA8SCV3KC';
  const searchKey = '6782ed5c8812fb117b825a5890912b31';
  const indexName = 'products';
  
  final searchClient = SearchClient(
    appId: appId,
    apiKey: searchKey,
  );
  
  // –¢–µ—Å—Ç—É—î–º–æ —Ä—ñ–∑–Ω—ñ –ø–æ—à—É–∫–æ–≤—ñ –∑–∞–ø–∏—Ç–∏
  final testQueries = [
    '—Ç–µ–ª–µ—Ñ–æ–Ω',
    '–∞–≤—Ç–æ',
    '–∫–≤–∞—Ä—Ç–∏—Ä–∞',
    'iPhone',
    'Toyota',
    '–ö–∏—ó–≤',
    '–õ—å–≤—ñ–≤',
  ];
  
  for (final query in testQueries) {
    print('\nüîç –¢–µ—Å—Ç—É—î–º–æ –ø–æ—à—É–∫: "$query"');
    
    try {
      final response = await searchClient.searchIndex(
        request: SearchForHits(
          indexName: indexName,
          query: query,
          filters: 'status:active OR status:null',
          hitsPerPage: 5,
        ),
      );
      
      print('üìä –ó–Ω–∞–π–¥–µ–Ω–æ: ${response.nbHits} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤');
      print('‚è±Ô∏è –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: ${response.processingTimeMS}ms');
      
      if (response.hits.isNotEmpty) {
        print('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç–∏:');
        for (int i = 0; i < response.hits.length && i < 3; i++) {
          final hit = response.hits[i];
          print('  ${i + 1}. ${hit['title']}');
          print('     –¶—ñ–Ω–∞: ${hit['price']} ${hit['currency']}');
          print('     –õ–æ–∫–∞—Ü—ñ—è: ${hit['location']}');
        }
      } else {
        print('‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ');
      }
      
    } catch (e) {
      print('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–æ—à—É–∫—É: $e');
    }
  }
  
  // –¢–µ—Å—Ç—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏–π –ø–æ—à—É–∫
  print('\nüîç –¢–µ—Å—Ç—É—î–º–æ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏–π –ø–æ—à—É–∫');
  
  try {
    final response = await searchClient.searchIndex(
      request: SearchForHits(
        indexName: indexName,
        query: '–∞–≤—Ç–æ',
        filters: 'category_id:transport-category AND price:10000 TO 50000',
        hitsPerPage: 5,
      ),
    );
    
    print('üìä –§—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–∏–π –ø–æ—à—É–∫: ${response.nbHits} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤');
    print('‚è±Ô∏è –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: ${response.processingTimeMS}ms');
    
  } catch (e) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ–≥–æ –ø–æ—à—É–∫—É: $e');
  }
  
  // –¢–µ—Å—Ç—É—î–º–æ –≥–µ–æ–ø–æ—à—É–∫
  print('\nüåç –¢–µ—Å—Ç—É—î–º–æ –≥–µ–æ–ø–æ—à—É–∫ (–ö–∏—ó–≤)');
  
  try {
    final response = await searchClient.searchIndex(
      request: SearchForHits(
        indexName: indexName,
        query: '',
        aroundLatLng: '50.4501,30.5234',
        aroundRadius: 20000, // 20km
        hitsPerPage: 5,
      ),
    );
    
    print('üìä –ì–µ–æ–ø–æ—à—É–∫: ${response.nbHits} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤');
    print('‚è±Ô∏è –ß–∞—Å –≤–∏–∫–æ–Ω–∞–Ω–Ω—è: ${response.processingTimeMS}ms');
    
  } catch (e) {
    print('‚ùå –ü–æ–º–∏–ª–∫–∞ –≥–µ–æ–ø–æ—à—É–∫—É: $e');
  }
  
  print('\n‚úÖ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
} 